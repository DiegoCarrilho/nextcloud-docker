version: "3.3"
volumes:
  mysql-data:
  redis-data:
services:
  traefik:
    image: docker.io/traefik:2.4
    volumes:
     - ./traefik/conf:/etc/traefik
     - /var/run/docker.sock:/var/run/docker.sock
    networks:
     - frontend
    ports:
     - target: 80
       published: 80
       mode: host
     - target: 443
       published: 443
       mode: host
     - target: 8080
       published: 8080
       mode: host
    restart: unless-stopped
    deploy:
      placement:
        constraints:
         - "node.role==manager"
  app:
    image: ghcr.io/linuxserver/nextcloud
    environment:
      - PUID=${NEXTCLOUD_UID}
      - PGID=${NEXTCLOUD_GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./nextcloud/config:/config
      - ./nextcloud/data:/data
    networks:
      - frontend
      - backend
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOST_DOMAIN}`)
        - traefik.http.routers.nextcloud.tls=true
        - traefik.http.routers.nextcloud.entryPoints=web-secure
        - traefik.http.routers.nextcloud.tls.certResolver=letsencrypt-resolver
      # uncomment this line, and delete the one that follows, to enable HSTS:
      # - traefik.http.routers.nextcloud.middlewares=hsts@file,nextcloud-dav-redirect@file
        - traefik.http.routers.nextcloud.middlewares=nextcloud-dav-redirect@file
        - traefik.http.routers.nextcloud-insecure.rule=Host(`${NEXTCLOUD_HOST_DOMAIN}`)
        - traefik.http.routers.nextcloud-insecure.service=nextcloud-service
        - traefik.http.routers.nextcloud-insecure.middlewares=redirect-to-https@file
        - traefik.http.routers.nextcloud-insecure.entryPoints=web
        - traefik.http.services.nextcloud-service.loadbalancer.server.port=80
    depends_on:
      - mariadb
      - redis
    restart: unless-stopped
  mariadb:
    image: docker.io/mariadb:10
    environment:
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud-installer
      - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD}
    volumes:
      - ./mariadb/config:/etc/mysql/conf.d
      - mysql-data:/var/lib/mysql
    networks:
      - backend
    #user: ${MARIADB_UID}:${MARIADB_UID}
    restart: unless-stopped
  redis:
    image: docker.io/redis:6-alpine
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./redis/config:/usr/local/etc/redis
      - redis-data:/data
    networks:
      - backend
    #user: ${REDIS_UID}:${REDIS_GID}
    restart: unless-stopped
networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay
